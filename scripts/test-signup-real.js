const { createClient } = require('@supabase/supabase-js')

const supabaseUrl = 'https://enolssforaepnrpfrima.supabase.co'
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVub2xzc2ZvcmFlcG5ycGZyaW1hIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDk0MTQ2MzksImV4cCI6MjA2NDk5MDYzOX0.oZJdelgrqkyPA9g3cjGikrTLLNvv9sCkrTIl9jK4wBk'

async function testRealSignup() {
  console.log('üß™ TESTE SIGNUP REAL - Verifica√ß√£o por Email')
  console.log('============================================\n')

  const supabase = createClient(supabaseUrl, supabaseAnonKey)
  
  // Email de teste √∫nico
  const testEmail = `teste-verificacao-${Date.now()}@gmail.com`
  console.log(`üìß Email de teste: ${testEmail}`)
  
  try {
    console.log('üîÑ Tentando signup p√∫blico (com SMTP)...')
    
    const { data, error } = await supabase.auth.signUp({
      email: testEmail,
      password: 'TestPassword123!',
      options: {
        data: {
          full_name: 'Teste Verifica√ß√£o SMTP',
          name: 'Teste Verifica√ß√£o SMTP'
        }
      }
    })

    console.log('\nüìä RESULTADO DO SIGNUP:')
    console.log('========================')
    
    if (error) {
      console.log('‚ùå ERRO:', error.message)
      console.log('   Status:', error.status)
      
      // Verificar se √© erro SMTP
      if (error.message?.includes('Error sending') || error.status === 500) {
        console.log('\nüö® PROBLEMA IDENTIFICADO:')
        console.log('   ‚ùå SMTP n√£o est√° funcionando corretamente')
        console.log('   ‚ùå Sistema ainda apresenta erro 500')
        console.log('   üîß SOLU√á√ÉO: Verificar configura√ß√£o SMTP no Supabase')
      }
    } else {
      console.log('‚úÖ Signup realizado com sucesso!')
      console.log('   User ID:', data.user?.id)
      console.log('   Email:', data.user?.email)
      console.log('   Email Confirmed:', data.user?.email_confirmed_at)
      console.log('   Session:', data.session ? 'Criada' : 'N√£o criada')
      
      if (data.user && !data.user.email_confirmed_at) {
        console.log('\nüìß STATUS EMAIL:')
        console.log('   ‚úÖ Conta criada via API p√∫blica')
        console.log('   üì¨ Email de confirma√ß√£o deve ter sido enviado')
        console.log('   ‚è≥ Aguardando confirma√ß√£o do usu√°rio')
        console.log('\nüéØ VERIFICAR:')
        console.log('   1. Caixa de entrada do email')
        console.log('   2. Pasta de spam/lixo eletr√¥nico')
        console.log('   3. Logs do Supabase para erros SMTP')
      } else if (data.user && data.user.email_confirmed_at) {
        console.log('\n‚ö†Ô∏è  ATEN√á√ÉO:')
        console.log('   ü§î Email j√° confirmado automaticamente')
        console.log('   üîß Isso indica que pode estar usando Admin API')
      }
    }
    
  } catch (err) {
    console.log('‚ùå ERRO INESPERADO:', err.message)
  }
  
  console.log('\nüîç PR√ìXIMOS PASSOS:')
  console.log('===================')
  console.log('1. Verificar dashboard Supabase > Auth > Settings > SMTP')
  console.log('2. Confirmar que SMTP est√° habilitado e configurado')
  console.log('3. Testar configura√ß√£o SMTP no dashboard')
  console.log('4. Verificar logs de Auth no Supabase')
}

testRealSignup().catch(console.error) 